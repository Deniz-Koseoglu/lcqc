% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fastchrom_bline.R
\name{fastchrom_bline}
\alias{fastchrom_bline}
\title{Calculate baselines of resolved peaks using the FastChrom algorithm}
\usage{
fastchrom_bline(inds = NA, sig, starts, ends, crit_w = 1, for_plot = FALSE)
}
\arguments{
\item{inds}{An \strong{optional} \code{numeric} vector of data indices equal in length to \code{sig}. Equal to \code{seq(length(sig))} by default.}

\item{sig}{Chromatographic signal data as a \code{numeric} vector.}

\item{starts, ends}{A \code{numeric} vector of peak \strong{start} and \strong{end} indices.}

\item{crit_w}{The critical width parameter. Usually equal to the minimum peak width at half height (see \strong{Details}).}

\item{for_plot}{A \code{logical} toggle that determines whether the output data should be formatted for plotting (e.g. via \code{\link{chrom_plot}}).}
}
\value{
A \code{list} of length 2 is returned containing the output \code{$data} and (updated) peak limits \code{$peaklims}.
The structure of \code{$data} changes depending on whether \code{for_plot} is \code{TRUE}.
If so, a \code{list} of length 3 is returned containing \code{numeric} vectors of the \code{Original_Signal},
\code{Corrected_Signal}, and \code{Baseline}. Otherwise, the same data alongside data indices is returned as a
4-column \code{data.frame}.
}
\description{
The function calculates baselines of well-resolved peaks and peak groups via the FastChrom algorithm of Johnsen et al. (2013).
}
\details{
Iteratively derives baselines for all resolved regions based on the FastChrom algorithm proposed by Johnsen et al. (2013).
First, all peak regions (e.g. determined by \code{\link{chrom_detect}}) are separated and a linear interpolation is carried out between their starting
and ending points to derive initial baselines.
Each baseline is then checked and, if necessary, adjusted iteratively as follows: if a \strong{consecutive} number of baseline points
equal to or greater than the critical width (\code{crit_w}) of the baseline are \strong{above the signal}, the baseline is forced through the
\strong{single lowest} point relative to the baseline and re-interpolated. This is repeated until there are no baseline points above the signal.
}
\examples{
sigvec <- lcqc::simlc1[,"Signal"]
strvec <- c(486, 763, 916, 1745, 2428)
endvec <- c(707, 897, 1050, 1946, 2588)
crw <- 1

#Data formatted simply
res1 <- fastchrom_bline(sig = sigvec, starts = strvec, ends = endvec, crit_w = crw,
for_plot = FALSE)

#Data formatted for plotting
res2 <- fastchrom_bline(sig = sigvec, starts = strvec, ends = endvec, crit_w = crw, for_plot = TRUE)

#Create plot
plot(res2[["Original_Signal"]])
lines(res2[["Baseline"]], col = "red")

}
\references{
Johnsen, L.G., Skov, T., Houlberg, U., Bro, R. (2013), 'An automated method for baseline correction, peak finding and peak grouping in chromatographic data', \emph{Analyst} \strong{138} (12), pp. 3502-3511, DOI: \url{https://www.doi.org/10.1039/C3AN36276K}
}
\seealso{
\code{\link{dtprep}}
}
