% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chrom_derlims.R
\name{chrom_derlims}
\alias{chrom_derlims}
\title{Determine First and Second Derivative Peak Detection Thresholds}
\usage{
chrom_derlims(
  x,
  y = NULL,
  fder,
  sder,
  method = "ncore",
  outs = "iqr",
  sens = c(3, 1)
)
}
\arguments{
\item{x}{Vector of peak \strong{start} indices (when \code{y} is provided), or a 2-column \code{data.frame} containing peak start and end indices.}

\item{y}{Either \code{NULL} (if \code{x} is a \code{data.frame}) or a vector of peak \strong{end} indices equal in length to \code{x} (if the latter is also a vector).}

\item{fder}{A vector of first derivatives derived from a signal.}

\item{sder}{A vector of second derivatives derived from the same signal as \code{fder}.}

\item{method}{Method used to calculate derivative-based peak detection thresholds. One of: \code{"vaz"} (Vaz et al., 2016), \code{"zscore"} (Z-score), or \code{"ncore"} (noise core, \strong{Details}).}

\item{outs}{Outlier detection/removal method. One \strong{or more} of: \code{"none"}, \code{"all"}, \code{"iqr"} (inter-quartile range), \code{"quant"} (quantile), or \code{"sd"} (standard deviation, see \strong{Details}).}

\item{sens}{A vector of two \code{numeric} sensitivity values for fine adjustment of peak detection thresholds. Unique for each \code{method} - see \strong{Details}.}
}
\value{
A \code{list} with 3 elements: \code{$FD} and \code{$SD} each a containing a vector of length 2 with inferior and superior first and second derivative thresholds, respectively.
Finally, element \code{$noise} contains a list of \code{fder} (\code{$FD_noise}) and \code{sder} (\code{$SD_noise}) values determined to be noise.
}
\description{
Calculation of inferior (low) and superior (high) first/second derivative thresholds to use for peak detection.
}
\details{
As a first step, the function removes all \code{fder} and \code{sder} points within the peak regions provided in \code{x} and/or \code{y}.
Outliers are then removed from the resulting vector of noise using \strong{one or more} (or none) of the following criteria in any combination:
\describe{
\item{\code{"iqr"}}{ All values outside of \eqn{Q_1-1.5\times IQR} and \eqn{Q_3+1.5\times IQR} are removed (where \eqn{Q_1}, \eqn{Q_3}, and \eqn{IQR} are the first quartile, third quartile, and inter-quartile range, respectively).}
\item{\code{"quant"}}{ All values outside of the 2.5\% and 97.5\% quantiles are removed.}
\item{\code{"sd"}}{ All values outside \eqn{\overline{X}\pm 2.24\times SD} are removed (where \eqn{\overline{x}} and \eqn{SD} are the mean and standard deviation of the derivatives, respectively).}
}
Inferior and superior (i.e. low and high) peak detection thresholds are then calculated from the remaining data using one of three methods.
\strong{Method \code{"vaz"}} is based on the work of Vaz et al. (2016). Differences between the global median of derivative signal \eqn{M_D}
and the derivative signal are calculated and a new median \eqn{M_new} calculated from these results. Finally, the inferior and superior thresholds \eqn{T} are calculated as follows:
\deqn{T=M_D\pm sens1\times M_new/sens2}
Here, \eqn{sens1} (given in \code{sens[1]}) is an empirical factor with which the threshold range widens/increases.
Conversely, \eqn{sens2} (given in \code{sens[2]}) is inversely related to the threshold range.

\strong{Method \code{"zscore"}} is a slight variation reliant solely on the \code{median} of derivatives:
\deqn{T=M_D+sens1\times M_D/sens2}
Finally, \strong{method \code{"ncore"}} follows the widely-practised noise-core approach (e.g. Waters Corporation, 2016).
The noise core is determined as the standard deviation \eqn{SD} distance from the mean \eqn{\overline{X}} of derivatives:
\deqn{T=\overline{X}\pm sens1\times SD/sens2}
Many industry-standard approaches recommend a value of 4 for \eqn{sens1}, stating that \eqn{\pm 4SD} best defines chromatographic noise.
}
\examples{
#Calculate derivatives
xvals <- lcqc::simlc1[,"Time"]
yvals <- lcqc::simlc1[,"Signal"]
ders <- chrom_deriv(xvals, yvals)
fder <- ders[[1]]
sder <- ders[[2]]

#Get optimal z-score peak regions
zlims <- z_optim(yvals)[[1]]

#Get derivative peak detection thresholds
thres <- chrom_derlims(x = zlims, y = NULL, fder, sder, method = "ncore", sens = c(2,1))
noise_plot(thres[["noise"]][["FD_noise"]], thres[["FD"]])
noise_plot(thres[["noise"]][["SD_noise"]], thres[["SD"]])

}
\references{
Vaz, F.A.S., Neves, L.N.O., Marques, R., Sato, R.T., Oliveira, M.A.L. (2016), 'Chromophoreasy, an Excel-Based Program for Detection and Integration of Peaks from Chromatographic and Electromigration Techniques', \emph{Journal of the Brazilian Chemical Society} \strong{27} (10), pp. 1899-1911.

Waters Corporation (2016), 'ApexTrack Integration: Theory and Application', document number 72000494EN, available at: https://www.waters.com/waters/library.htm?cid=511436&lid=1546221&locale=en_GB (accessed 17.04.2024).
}
\seealso{
\code{\link{z_thres}}, \code{\link{chrom_deriv}}, \code{\link{noise_plot}}
}
