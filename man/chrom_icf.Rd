% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chrom_icf.R
\name{chrom_icf}
\alias{chrom_icf}
\title{Non-Linear Least Squares Iterative Curve Fitting (ICF) of chromatographic data using various models}
\usage{
chrom_icf(
  input,
  method = "all",
  crit_w = "auto",
  optmet = "all",
  reprs = c(emg = "emg1"),
  modres = FALSE,
  plotset = "make",
  asprat = 0.71
)
}
\arguments{
\item{input}{The output \code{list} of data from \code{\link{chrom_detect}}.}

\item{method}{The \code{character} vector of method(s) to use for curve fitting. One or more of several available models:
simple Gaussian (\code{"gs"}), Exponentially-Modified Gaussian (\code{"emg"}), Exponential-Gaussian Hybrid (\code{"egh"}),
Empirically-Transformed Gaussian (\code{"etg"}), or \code{"all"}
(default value which applies all available models and picks the best-performing model individually for each peak or peak group).}

\item{crit_w}{The critical width parameter used to calculate peak group baselines via \code{\link{fastchrom_bline}}.}

\item{optmet}{The \code{character} vector of method(s) to use for iterative optimization as outlined in \code{\link[stats]{optim}}.
One or more of: \code{"Nelder-Mead"}, \code{"BFGS"}, \code{"L-BFGS-B"}, \code{"SANN"}, or \code{"all"} (default).}

\item{reprs}{A \strong{named} \code{character} vector of model representations (where more than one is available).
Names must be present in \code{method}. Currently available representations are:
EMG (\code{"emg1"} or \code{"emg2"}).}

\item{modres}{A \code{logical} switch which determines whether baseline-resolved peaks are modeled (\code{FALSE} by default).}

\item{plotset}{A \code{character} string specifying whether data is visualized/shown via \code{\link{icf_plot}}.
One of \code{"make"} (generates plots without printing; default), \code{"print"} (generates and prints plots), or \code{"none"}.}

\item{asprat}{Aspect ratio of the plot (defaults to \code{0.71}).}
}
\value{
A \code{list} of length 5 containing the following elements:
\describe{
\item{main_data}{A \code{data.frame} containing comprehensive results of ICF. Columns include data indices (\code{"ind"}),
retention time (\code{"x"}), original signal (\code{"orig_y"}), that corrected for the \strong{global} baseline
(\code{"corr_y"}; see also \code{\link{chrom_bline}}), the individual peak or peak group baseline obtained via the
FastChrom algorithm (\code{"bline"}; see also \code{\link{fastchrom_bline}}), the final baseline-corrected signal (\code{"y"}),
ICF model type used (\code{"model_type"}), the summed model curve for all peaks within a group (\code{"modsum_y"}),
one column each for individual peak models (\code{paste0("peak_", peak_ID)}),
and the baseline-resolved peak group ID (\code{"group"}).}
\item{integ_res}{A \code{data.frame} containing the integration results for each peak, including the type of model used
(\code{"model_type"}), the associated RMSE (\code{"model_rmse"}), and the integrated peak area (\code{"pa"}).}
\item{information}{A \code{character} string of various statements about the results.}
\item{call}{The function call.}
\item{modplot}{An (optional) list of \code{ggplot} objects containing \code{\link{icf_plot}} visualization(s) of results.}
}
}
\description{
The workflow uses data from peaks detected by \code{\link{chrom_detect}} to model chromatographic peaks by
iteratively fitting simple Gaussian and modified Gaussian models of varying complexity.
See \strong{Details} for further information.
}
\details{
Iterative curve fitting (ICF) fits several Gaussian and modified Gaussian models to either a single or a group of chromatographic peaks
and minimizes the associated Root Mean Squared Error (RMSE) of the resulting model through iterative optimization. Thus, a
model that resembles actual chromatographic signal as closely as possible within the constraints of the chosen model is obtained.
ICF is especially useful as a peak deconvolution method for moderately or even completely fused peaks. The \code{\link{chrom_icf}}
workflow currently implements 3 popular ICF models and offers active selection of the most appropriate model for each examined peak
or a group of up to 5 fused peaks. The available models include a simple Gaussian model (GS), the Exponentially-Modified Gaussian (EMG),
and the Exponential-Gaussian Hybrid (EGH) that is considered a simpler, more robust alternative to EMG with faster computation time.

The GS model is based on the following equation (Nikitas et al., 2001):
\deqn{H_{gs} = H_m\times e^{-((t_R-t_m)/2\sigma)^2}}
Where \eqn{H_m} and \eqn{t_R} are the signal and retention time at peak maximum, respectively, \eqn{t_R} is the current retention time,
and \eqn{\sigma} is the standard deviation of the curve, effectively approximated as half of the peak width at inflection point height.
The Gaussian model thus has only 3 parameters that require optimization and is therefore computationally cheap, but cannot accommodate
fronting or tailing phenomena often observed in chromatographic data.

The EMG model (e.g. Li, 1995; Nikitas et al., 2001; Caballero et al., 2002; Kalambet et al., 2011) incorporates an exponential
component into the Gaussian model and is by far the most popular approach to modeling chromatographic peaks with tailing and fronting:
\deqn{H_{emg} = A\times e^{0.5\times(\sigma/\tau)^2 - ((t_R-t_0)/\tau)}\times\mathcal{P}((t_R-t_0)/\sigma - \sigma/\tau)/\tau}
Sometimes also written as (Li, 1997):
\deqn{H_{emg} = A/2\tau\times e^{(\sigma^2/2\tau^2 + (t_0-t_R)/\tau)}\times(1+erf((t_R-t_0)/\sqrt{2\sigma} - \sigma/\sqrt{2\tau}))}
Where new parameters \eqn{A} and \eqn{\tau} are, respectively, the peak area and the exponential time constant, which is negative
for fronting peaks and positive for tailing peaks. The EMG model takes longer than GS or EGH to compute and appears to be less stable.

The EGH model (Lan & Jorgenson, 2001; Li, 2002) is a simplified empirical equation that also accommodates fronting and tailing
peaks by including a truncated exponential component into the equation:
\deqn{H_{egh} = H_m\times e^{-(t_{R2}-t_0)^2/(2\sigma^2 + \tau\times(t_{R2}-t_0))}}
Where \eqn{t_{R2}} are those retention times where \eqn{(2\sigma^2 + \tau\times(t_R-t_0)) > 0}. EGH converges significantly faster
than EMG, but somewhat lacks flexibility for modeling fronting peaks (similarly to EMG).

Finally, the ETG model is unique in incorporating 6 parameters describing the \strong{leading} (\eqn{k_l}, \eqn{\lambda_l},
and \eqn{\alpha}) and \strong{trailing} (\eqn{k_r}, \eqn{\lambda_r}, and \eqn{\beta}) peak edges, respectively. Including
the peak height \eqn{H_m}, a total of 7 parameters are optimized. Additionally, the function requires estimates of the left
and right inflection point times (\eqn{t_l} and \eqn{t_r}) for each peak, which remain constant and are not optimized:
\deqn{H_{etg} = (2H_me^{0.5})/((1 + \lambda_l e^{k_l(t_l - t)})^\alpha + (1 + \lambda_r e^{k_r(t - t_r)})^\beta - 1)}
The ETG model offers a unique advantage of loose coupling between the descriptions of leading and trailing peak edges, which
are only related by one peak amplitude parameter (derived from peak height). Additionally, despite the iterative optimization
of 7 parameters, the fitting procedure converges rapidly (is not computationally expensive) - often more so than EMG.

All of the above functions are submitted for iterative optimization via a penalty function based on the Root Mean Squared Error (RMSE),
which may be represented as follows:
\deqn{RMSE = \sum{\sqrt{(y_i - \hat{y}_i)^2/n}}}
Where \eqn{y_i}, \eqn{\hat{y}_i}, and \eqn{n} are the original signal, modeled curve, and sample size (number of points in the original data),
respectively. This error metric is used to evaluate model performance and select the best-suited model among GS, EMG, EGH, and ETG during
iterative optimization via the \code{\link[stats]{optim}} function.
}
\examples{
\dontrun{
#Get data
det_res <- lcqc:::wf_detpeaks
chrom_icf(det_res, method = "egh", modres = TRUE)
chrom_icf(det_res, method = c("egh","etg"), modres = FALSE)
}

}
\references{
Kalambet, Y., Kozmin, Y., Mikhailova, K., Nagaev, I., Tikhonov, P. (2011), 'Reconstruction of Chromatographic Peaks using the Exponentially Modified Gaussian Function', \emph{Journal of Chemometrics} \strong{25} (7), pp. 352-356, DOI: \url{https://doi.org/10.1002/cem.1343}.

Li (1995), 'A Simplified Exponentially Modified Gaussian Function for Modeling Chromatographic Peaks', \emph{Journal of Chromatographic Science} \strong{33}, pp. 568-572, DOI: \url{https://www.doi.org/10.1093/chromsci/33.10.568}.

Li (1997), 'Development and Evaluation of Flexible Empirical Peak Functions for Processing Chromatographic Peaks', \emph{Analytical Chemistry} \strong{69}, pp. 4452-4462, DOI: \url{https://www.doi.org/10.1021/ac970481d}.

Li (2002), 'Comparison of the Capability of Peak Function in Describing Real Chromatographic Peaks', \emph{Journal of Chromatography A} \strong{952} (1), pp. 63-70, DOI: \url{https://doi.org/10.1016/S0021-9673(02)00090-0}.

Lan, K., Jorgenson, J.W. (2001), 'A Hybrid of Exponential and Gaussian Functions as a Simple Model of Asymmetric Chromatographic Peaks', \emph{Journal of Chromatography A} \strong{915} (1), pp. 1-13, DOI: \url{https://doi.org/10.1016/S0021-9673(01)00594-5}.

Nikitas, P., Pappa-Louisi, A., Papageorgiou, A. (2001), 'On the Equations Describing Chromatographic Peaks and the Problem of the Deconvolution of Overlapped Peaks', \emph{Journal of Chromatography A} \strong{912} (1), pp. 13-29, DOI: \url{https://doi.org/10.1016/S0021-9673(01)00524-6}.

Wahab, M.F., Armstrong, D.W., Hellinghausen, G. (2019), 'The Progress Made in Peak Processing', \emph{LCGC Supplements} \strong{32} (5), pp. 22-28.
}
\seealso{
This workflow uses a multitude of exported and \strong{un}exported functions:
\describe{
\item{Exported}{\code{\link{icf_plot}}, \code{\link{dtprep}}, \code{\link{fastchrom_bline}}, \code{\link{integ}}}
\item{Unexported}{Model-building functions (\code{\link{icf_GS}}, \code{\link{icf_EMG}}, \code{\link{icf_EGH}}, \code{\link{icf_ETG}}),
error calculation functions (\code{\link{gs_penalty}}, \code{\link{emg_penalty}}, \code{\link{egh_penalty}}, \code{\link{etg_penalty}}),
\code{\link{init_egh}}, \code{\link{peak_hw}}}
}
}
